version: '3.5'

services:
  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper
    networks:
      - data-engineering-network
    ports:
     - 2181:2181
     - 2888:2888
     - 3888:3888

  kafka:
    container_name: kafka
    image: wurstmeister/kafka:0.11.0.1
    depends_on:
      - zookeeper
    networks:
      - data-engineering-network
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_HOST_NAME: "kafka"

  mongo:
    container_name: mongo
    image: mongo
    networks:
      - data-engineering-network
    ports:
      - '27017:27017'
    logging:
      driver: none

  twitter-ingestion:
    container_name: twitter-ingestion
    build: 
      context: ./ingestion
      dockerfile: twitter.Dockerfile
    image: twitter-ingestion:latest
    depends_on:
      - kafka
    networks:
      - data-engineering-network

  crypto-ingestion:
    container_name: crypto-ingestion
    build: 
      context: ./ingestion
      dockerfile: crypto.Dockerfile
    image: crypto-ingestion:latest
    depends_on:
      - kafka
    networks:
      - data-engineering-network

  pyspark:
    container_name: pyspark
    image: jupyter/pyspark-notebook
    volumes: 
      - ./pyspark:/home/jovyan/work
    networks:
      - data-engineering-network
    ports:
      - '8080:8888'
    command: "start-notebook.sh --NotebookApp.token='' --NotebookApp.notebook_dir=/home/jovyan/work"
    user: root
    environment:
      - GRANT_SUDO=yes
  
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.3.2
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"

  kibana:
    image: docker.elastic.co/kibana/kibana:6.3.2
    ports:
      - "5601:5601"

networks:
  data-engineering-network:
   name: data-engineering-network